# -*- mode: Makefile;-*-

req_RULES_NAMES:=pkgs jdk ant maven java.all
req_install_RULES:=$(filter-out %.java.all %.pkgs, $(addprefix install., $(req_RULES_NAMES)) )
req_conf_RULES:=$(filter-out %.java.all %.pkgs, $(addprefix conf., $(req_RULES_NAMES)) )


install.pkgs: required_pkgs.sh
	$(QUIET)sudo -E bash -c "$<"

install.java.all: $(req_install_RULES)

conf.java.all: $(req_conf_RULES)

## JDK
install.jdk: install_java_pkgs_local.bash | $(JAVA_LOCAL)
	$(QUIET)echo "OpenJDK will be in $(JAVA_LOCAL)/openjdk$(JAVA_LOCAL_VER)"
	$(QUIET)bash $< "jdk$(JAVA_LOCAL_VER)" "$(JAVA_LOCAL)"

conf.jdk: 
	$(QUIET)echo ">>> Generating $(TOP)/configure/CONFIG_COMMON_JDK.local"
	$(QUIET)-rm -f $(TOP)/configure/CONFIG_COMMON_JDK.local
	$(QUIET)echo "JAVA_HOME:=$(JAVA_LOCAL)/openjdk$(JAVA_LOCAL_VER)"      > $(TOP)/configure/CONFIG_COMMON_JDK.local
	$(QUIET)echo "JAVA_PATH:=$(JAVA_LOCAL)/openjdk$(JAVA_LOCAL_VER)/bin" >> $(TOP)/configure/CONFIG_COMMON_JDK.local
	$(QUIET)cat -b $(TOP)/configure/CONFIG_COMMON_JDK.local

install.ant: install_java_pkgs_local.bash  | $(JAVA_LOCAL)
	$(QUIET)echo "ANT be in $(JAVA_LOCAL)/ant"
	$(QUIET)bash $< "ant" "$(JAVA_LOCAL)"

conf.ant: 
	$(QUIET)echo ">>> Generating CONFIG_COMMON_ANT.local"
	-rm -f $(TOP)/configure/CONFIG_COMMON_ANT.local
	$(QUIET)echo "ANT_HOME:=$(JAVA_LOCAL)/ant"      > $(TOP)/configure/CONFIG_COMMON_ANT.local
	$(QUIET)echo "ANT_PATH:=$(JAVA_LOCAL)/ant/bin" >> $(TOP)/configure/CONFIG_COMMON_ANT.local
	$(QUIET)cat -b $(TOP)/configure/CONFIG_COMMON_ANT.local

install.maven: install_java_pkgs_local.bash  | $(JAVA_LOCAL)
	$(QUIET)echo "MAVEN be in $(JAVA_LOCAL)/maven"
	$(QUIET)bash $< "maven" "$(JAVA_LOCAL)"

conf.maven: CONFIG_COMMON_MAVEN.local
	$(QUIET)echo ">>> Generating $<"
	-rm -f $<
	$(QUIET)echo "MAVEN_HOME:=$(JAVA_LOCAL)/maven"      > $<
	$(QUIET)echo "MAVEN_PATH:=$(JAVA_LOCAL)/maven/bin" >> $<
	$(QUIET)cat -b $<

 $(JAVA_LOCAL):
	@mkdir -p $@

.PHONY: get.jdbc clean.jdbc install.jdbc
get.jdbc:
	$(QUIET)echo "Downloading JDBC connector ... "
	$(QUIET)bash install_java_pkgs_local.bash "jdbc"

ifneq ($(wildcard mariadb-java-*.jar),)
clean.jdbc: 
	$(QUIET) rm -rf mariadb-java-*.jar

install.jdbc:
	$(QUIET) echo "Copying $(wildcard mariadb-java-*.jar) to $(TOMCAT_HOME)/lib/"
	$(QUIET) sudo $(INSTALL_755) mariadb-java-*.jar $(TOMCAT_HOME)/lib/
else

clean.jdbc:

install.jdbc:

endif

req_storage_RULES_NAMES:=storage storage.show storage.rm 
req_storage_RULES:=$(addprefix conf., $(req_storage_RULES_NAMES))

conf.storage:
	@echo "\n>>> Preparing $(ARCHAPPL_STORAGE_TOP) .... "
	@sudo $(INSTALL) -d $(ARCHAPPL_SHORT_TERM_FOLDER)
	@sudo $(INSTALL) -d $(ARCHAPPL_MEDIUM_TERM_FOLDER)
	@sudo $(INSTALL) -d $(ARCHAPPL_LONG_TERM_FOLDER)	
	@sudo chown -R $(USERID):$(GROUPID) $(ARCHAPPL_STORAGE_TOP)

conf.storage.show:
	@tree -pugL  $(LEVEL)  $(ARCHAPPL_STORAGE_TOP);

conf.storage.rm:
	-rm -rf $(ARCHAPPL_STORAGE_TOP)
